{"version":3,"sources":["styles/GlobalStyle.ts","components/PageTemplate.tsx","apis/TodoApi.ts","hooks/useInput.ts","components/TodoNewInput.tsx","components/TodoHeader.tsx","components/TodoItem.tsx","components/TodoList.tsx","components/TodoMain.tsx","pages/TodoPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GlobalStyle","createGlobalStyle","normalize","PageTemplateWrapper","styled","div","props","background","ContentWrapper","Responsive","PageTemplate","isResponsive","children","sleep","ms","Promise","f","setTimeout","TodoApi","fetchTodoList","onSuccess","a","items","id","title","done","pinned","counter","useInput","defaultValue","useState","value","setValue","e","target","TodoNewInputWrapper","TitleInput","input","AddIcon","span","TodoNewInput","addNewTodo","onChangeTitle","setTitle","placeholder","onChange","onClick","TodoHeaderWrapper","TodoHeader","TodoItemWrapper","PinIcon","DoneIcon","DeleteIcon","Content","css","TodoItem","todo","changeTodo","deleteTodo","TodoListWrapper","TodoList","todos","sortedItems","setSortedItems","useEffect","sort","b","map","TodoMainBackground","Loading","TodoMain","todoApi","todoList","setTodoList","newTodo","filter","TodoWrapper","TodoPage","App","path","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOA0BeA,EAvBKC,4BAAH,iPACbC,a,sBCEEC,EAAsBC,UAAOC,IAAV,4GAGT,SAACC,GAAD,OAAWA,EAAMC,cAI3BC,EAAiBJ,UAAOC,IAAV,kDAIdI,EAAaL,UAAOC,IAAV,wFAuBDK,EAZmC,SAACJ,GACjD,MAA2DA,EAAnDC,kBAAR,MAAqB,UAArB,EAAgCI,EAA2BL,EAA3BK,aAAcC,EAAaN,EAAbM,SAE9C,OACE,cAACT,EAAD,CAAqBI,WAAYA,EAAjC,SACE,cAACC,EAAD,UACGG,EAAe,cAACF,EAAD,UAAaG,IAAyBA,O,yDChCxDC,EAAQ,SAACC,GACb,OAAO,IAAIC,SAAQ,SAACC,GAAD,OAAOC,WAAWD,EAAGF,OAyC3BI,E,sCArCbC,c,uCAAgB,WAAOC,GAAP,SAAAC,EAAA,sEACRR,EAAM,KADE,OAiCdO,EA9B6B,CAC3BE,MAAO,CACL,CACEC,GAAI,EACJC,MAAO,gEACPC,MAAM,EACNC,QAAQ,GAEV,CACEH,GAAI,EACJC,MAAO,kCACPC,MAAM,EACNC,QAAQ,GAEV,CACEH,GAAI,EACJC,MAAO,qDACPC,MAAM,EACNC,QAAQ,GAEV,CACEH,GAAI,EACJC,MAAO,yCACPC,MAAM,EACNC,QAAQ,IAGZC,QAAS,IA9BG,2C,uDCQHC,EAbE,SAACC,GAChB,MAA0BC,mBAASD,GAAgB,IAAnD,mBAAOE,EAAP,KAAcC,EAAd,KAKA,MAAO,CAACD,EAJc,SAACE,GACrBD,EAASC,EAAEC,OAAOH,QAGUC,I,QCJ1BG,EAAsB/B,UAAOC,IAAV,kGAMnB+B,EAAahC,UAAOiC,MAAV,sFAOVC,EAAUlC,UAAOmC,KAAV,mJAuCEC,EAvBmC,SAAClC,GACjD,IAAQmC,EAAenC,EAAfmC,WACR,EAAyCb,IAAzC,mBAAOJ,EAAP,KAAckB,EAAd,KAA6BC,EAA7B,KAOA,OACE,eAACR,EAAD,WACE,cAACC,EAAD,CACEQ,YAAY,4DACZb,MAAOP,EACPqB,SAAUH,IAEZ,cAACJ,EAAD,CAASQ,QAZG,WACdL,EAAWjB,GACXmB,EAAS,KAUP,SACE,cAAC,IAAD,UC/CFI,EAAoB3C,UAAOC,IAAV,sEAmBR2C,EAV+B,SAAC1C,GAC7C,IAAQmC,EAAenC,EAAfmC,WAER,OACE,cAACM,EAAD,UACE,cAAC,EAAD,CAAcN,WAAYA,O,iBCX1BQ,GAAkB7C,UAAOC,IAAV,kOAaf6C,GAAU9C,UAAOmC,KAAV,2HAUPY,GAAW/C,UAAOmC,KAAV,kJAYRa,GAAahD,UAAOmC,KAAV,mJAgBVc,GAAUjD,UAAOmC,KAAV,wHAOT,SAACjC,GAAD,OACAA,EAAMmB,MACN6B,cADA,yEA4CWC,GAhC2B,SAACjD,GACzC,IAAQkD,EAAiClD,EAAjCkD,KAAMC,EAA2BnD,EAA3BmD,WAAYC,EAAepD,EAAfoD,WAClBlC,EAAwBgC,EAAxBhC,MAAOC,EAAiB+B,EAAjB/B,KAAMC,EAAW8B,EAAX9B,OAcrB,OACE,eAACuB,GAAD,WACE,cAACC,GAAD,CAASJ,QAVQ,WACnBW,EAAWD,EAAKjC,GAAI,CAAEG,QAAS8B,EAAK9B,UASlC,SACGA,EAAS,cAAC,IAAD,IAAoB,cAAC,IAAD,MAEhC,cAACyB,GAAD,CAAUL,QAjBK,WACjBW,EAAWD,EAAKjC,GAAI,CAAEE,MAAO+B,EAAK/B,QAgBhC,SACGA,EAAO,cAAC,IAAD,IAAuB,cAAC,IAAD,MAEjC,cAAC4B,GAAD,CAAS5B,KAAMA,EAAf,SAAsBD,IACtB,cAAC4B,GAAD,CAAYN,QAbG,WACjBY,EAAWF,EAAKjC,KAYd,SACE,cAAC,KAAD,UCjGFoC,GAAkBvD,UAAOC,IAAV,+CAuCNuD,GA7B2B,SAACtD,GACzC,IAAQuD,EAAkCvD,EAAlCuD,MAAOJ,EAA2BnD,EAA3BmD,WAAYC,EAAepD,EAAfoD,WAC3B,EAAsC5B,mBAA0B,IAAhE,mBAAOgC,EAAP,KAAoBC,EAApB,KAaA,OAXAC,qBAAU,WACRD,EACEF,EAAMvC,MAAM2C,MAAK,SAAC5C,EAAG6C,GAEnB,OAAI7C,EAAEK,SAAWwC,EAAExC,QAAgB,GAC9BL,EAAEK,QAAUwC,EAAExC,OAAe,EAC3BwC,EAAE3C,GAAKF,EAAEE,SAGnB,CAACsC,IAGF,cAACF,GAAD,UACGG,EAAYK,KAAI,SAACX,GAAD,OACf,cAAC,GAAD,CAEEA,KAAMA,EACNC,WAAYA,EACZC,WAAYA,GAHPF,EAAKjC,UC3Bd6C,GAAqBhE,UAAOC,IAAV,sMASlBgE,GAAUjE,UAAOC,IAAV,0BAoEEiE,GAlEY,WACzB,IAAMC,EAAU,IAAIrD,EACpB,EAAgCY,qBAAhC,mBAAO0C,EAAP,KAAiBC,EAAjB,KAEAT,qBAAU,WACRO,EAAQpD,eAAc,SAAC0C,GACrBY,EAAYZ,QAEb,IAwCH,OACE,cAACO,GAAD,UACII,EAGA,qCACE,cAAC,EAAD,CAAY/B,WA5CD,SAACjB,GAClB,GAAKgD,GACAhD,EAAL,CAEA,IAAMkD,EAAU,CACdlD,QACAD,GAAIiD,EAAS7C,QACbF,MAAM,EACNC,QAAQ,GAGV+C,EAAY,CACVnD,MAAM,GAAD,mBAAMkD,EAASlD,OAAf,CAAsBoD,IAC3B/C,QAAS6C,EAAS7C,QAAU,QAgCxB,cAAC,GAAD,CACEkC,MAAOW,EACPf,WArBS,SAAClC,EAAYmD,GACzBF,GAELC,EAAY,CACVnD,MAAOkD,EAASlD,MAAM6C,KAAI,SAACX,GAAD,mBAAC,eACtBA,GACCA,EAAKjC,KAAOA,GAAMmD,MAExB/C,QAAS6C,EAAS7C,WAcZ+B,WA/BS,SAACnC,GACbiD,GAELC,EAAY,CACVnD,MAAOkD,EAASlD,MAAMqD,QAAO,SAACnB,GAAD,OAAUA,EAAKjC,KAAOA,KACnDI,QAAS6C,EAAS7C,gBAmBhB,cAAC0C,GAAD,OClEFO,GAAcxE,UAAOC,IAAV,0KAoBFwE,GAVY,WACzB,OACE,cAAC,EAAD,CAAclE,cAAY,EAA1B,SACE,cAACiE,GAAD,UACE,cAAC,GAAD,SCJOE,GAVO,WACpB,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,UAAWH,UCMpBI,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,IACA,cAAC,GAAD,OAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.6d161d67.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\r\nimport { normalize } from 'styled-normalize';\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${normalize}\r\n\r\n  html {\r\n    height: 100%;\r\n  }\r\n\r\n  body {\r\n    width: 100%;\r\n    min-height: 100%;\r\n    margin: 0;\r\n    padding: 0;\r\n  }\r\n\r\n  #root {\r\n    height: 100%;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","import styled from 'styled-components';\r\n\r\ninterface PageTemplateWrapperProps {\r\n  background: string;\r\n}\r\n\r\nconst PageTemplateWrapper = styled.div<PageTemplateWrapperProps>`\r\n  width: 100%;\r\n  min-height: 100%;\r\n  background: ${(props) => props.background};\r\n  position: relative;\r\n`;\r\n\r\nconst ContentWrapper = styled.div`\r\n  min-height: 100vh;\r\n`;\r\n\r\nconst Responsive = styled.div`\r\n  width: 768px;\r\n  min-height: inherit;\r\n  margin: 0 auto;\r\n`;\r\n\r\ninterface PageTemplateProps {\r\n  background?: string;\r\n  isResponsive?: boolean;\r\n}\r\n\r\nconst PageTemplate: React.FC<PageTemplateProps> = (props) => {\r\n  const { background = '#f9f9f9', isResponsive, children } = props;\r\n\r\n  return (\r\n    <PageTemplateWrapper background={background}>\r\n      <ContentWrapper>\r\n        {isResponsive ? <Responsive>{children}</Responsive> : children}\r\n      </ContentWrapper>\r\n    </PageTemplateWrapper>\r\n  );\r\n};\r\n\r\nexport default PageTemplate;\r\n","import TodoListModel from 'models/TodoListModel';\r\n\r\nconst sleep = (ms: number) => {\r\n  return new Promise((f) => setTimeout(f, ms));\r\n};\r\n\r\nclass TodoApi {\r\n  fetchTodoList = async (onSuccess: (data: TodoListModel) => void) => {\r\n    await sleep(3000);\r\n\r\n    const todos: TodoListModel = {\r\n      items: [\r\n        {\r\n          id: 0,\r\n          title: '투두리스트 마무리하기',\r\n          done: false,\r\n          pinned: false,\r\n        },\r\n        {\r\n          id: 1,\r\n          title: '알프스 과제',\r\n          done: false,\r\n          pinned: true,\r\n        },\r\n        {\r\n          id: 2,\r\n          title: '콜로키움 과제 제출',\r\n          done: true,\r\n          pinned: true,\r\n        },\r\n        {\r\n          id: 3,\r\n          title: '밀린 강의 듣기',\r\n          done: false,\r\n          pinned: false,\r\n        },\r\n      ],\r\n      counter: 4,\r\n    };\r\n\r\n    onSuccess(todos);\r\n  };\r\n}\r\n\r\nexport default TodoApi;\r\n","import { useState } from 'react';\r\n\r\nconst useInput = (defaultValue?: string) => {\r\n  const [value, setValue] = useState(defaultValue || '');\r\n  const onChangeValue = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(e.target.value);\r\n  };\r\n\r\n  return [value, onChangeValue, setValue] as [\r\n    string,\r\n    (e: React.ChangeEvent<HTMLInputElement>) => void,\r\n    React.Dispatch<React.SetStateAction<string>>,\r\n  ];\r\n};\r\n\r\nexport default useInput;\r\n","import useInput from 'hooks/useInput';\r\nimport { FaPlus } from 'react-icons/fa';\r\nimport styled from 'styled-components';\r\n\r\nconst TodoNewInputWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  display: inline-block;\r\n  padding: 10px;\r\n\r\n  flex: 1;\r\n`;\r\n\r\nconst AddIcon = styled.span`\r\n  margin-left: 20px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    width: 25px;\r\n    height: 25px;\r\n  }\r\n`;\r\n\r\ninterface TodoNewInputProps {\r\n  addNewTodo: (title: string) => void;\r\n}\r\n\r\nconst TodoNewInput: React.FC<TodoNewInputProps> = (props) => {\r\n  const { addNewTodo } = props;\r\n  const [title, onChangeTitle, setTitle] = useInput();\r\n\r\n  const addTodo = () => {\r\n    addNewTodo(title);\r\n    setTitle('');\r\n  };\r\n\r\n  return (\r\n    <TodoNewInputWrapper>\r\n      <TitleInput\r\n        placeholder=\"할 일을 입력해 주세요\"\r\n        value={title}\r\n        onChange={onChangeTitle}\r\n      />\r\n      <AddIcon onClick={addTodo}>\r\n        <FaPlus />\r\n      </AddIcon>\r\n    </TodoNewInputWrapper>\r\n  );\r\n};\r\n\r\nexport default TodoNewInput;\r\n","import styled from 'styled-components';\r\nimport TodoNewInput from './TodoNewInput';\r\n\r\nconst TodoHeaderWrapper = styled.div`\r\n  width: 70%;\r\n  margin: 15px auto 40px;\r\n`;\r\n\r\ninterface TodoHeaderProps {\r\n  addNewTodo: (title: string) => void;\r\n}\r\n\r\nconst TodoHeader: React.FC<TodoHeaderProps> = (props) => {\r\n  const { addNewTodo } = props;\r\n\r\n  return (\r\n    <TodoHeaderWrapper>\r\n      <TodoNewInput addNewTodo={addNewTodo} />\r\n    </TodoHeaderWrapper>\r\n  );\r\n};\r\n\r\nexport default TodoHeader;\r\n","import styled, { css } from 'styled-components';\r\nimport TodoItemModel, { ChangeTodoItemProps } from 'models/TodoItemModel';\r\nimport { AiFillPushpin, AiOutlinePushpin } from 'react-icons/ai';\r\nimport { ImBin } from 'react-icons/im';\r\nimport { FaRegCheckSquare, FaRegSquare } from 'react-icons/fa';\r\n\r\nconst TodoItemWrapper = styled.div`\r\n  padding: 25px 20px;\r\n  border-bottom: 1px solid black;\r\n\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n\r\n  &:nth-child(1) {\r\n    border-top: 1px solid black;\r\n  }\r\n`;\r\n\r\nconst PinIcon = styled.span`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n`;\r\n\r\nconst DoneIcon = styled.span`\r\n  margin-left: 7px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    width: 18px;\r\n    height: 18px;\r\n  }\r\n`;\r\n\r\nconst DeleteIcon = styled.span`\r\n  margin-left: 10px;\r\n\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  svg {\r\n    width: 20px;\r\n    height: 20px;\r\n  }\r\n`;\r\n\r\ninterface ContentProps {\r\n  done?: boolean;\r\n}\r\n\r\nconst Content = styled.span<ContentProps>`\r\n  font-size: 16px;\r\n  margin-left: 15px;\r\n  vertical-align: middle;\r\n\r\n  flex: 1;\r\n\r\n  ${(props) =>\r\n    props.done &&\r\n    css`\r\n      text-decoration: line-through;\r\n    `}\r\n`;\r\n\r\ninterface TodoItemProps {\r\n  todo: TodoItemModel;\r\n  changeTodo: (id: number, newTodo: ChangeTodoItemProps) => void;\r\n  deleteTodo: (id: number) => void;\r\n}\r\n\r\nconst TodoItem: React.FC<TodoItemProps> = (props) => {\r\n  const { todo, changeTodo, deleteTodo } = props;\r\n  const { title, done, pinned } = todo;\r\n\r\n  const toggleDone = () => {\r\n    changeTodo(todo.id, { done: !todo.done });\r\n  };\r\n\r\n  const togglePinned = () => {\r\n    changeTodo(todo.id, { pinned: !todo.pinned });\r\n  };\r\n\r\n  const deleteThis = () => {\r\n    deleteTodo(todo.id);\r\n  };\r\n\r\n  return (\r\n    <TodoItemWrapper>\r\n      <PinIcon onClick={togglePinned}>\r\n        {pinned ? <AiFillPushpin /> : <AiOutlinePushpin />}\r\n      </PinIcon>\r\n      <DoneIcon onClick={toggleDone}>\r\n        {done ? <FaRegCheckSquare /> : <FaRegSquare />}\r\n      </DoneIcon>\r\n      <Content done={done}>{title}</Content>\r\n      <DeleteIcon onClick={deleteThis}>\r\n        <ImBin />\r\n      </DeleteIcon>\r\n    </TodoItemWrapper>\r\n  );\r\n};\r\n\r\nexport default TodoItem;\r\n","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoItemModel, { ChangeTodoItemProps } from 'models/TodoItemModel';\r\nimport TodoListModel from 'models/TodoListModel';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoListWrapper = styled.div`\r\n  margin: 10px 0;\r\n`;\r\n\r\ninterface TodoListProps {\r\n  todos: TodoListModel;\r\n  changeTodo: (id: number, newTodo: ChangeTodoItemProps) => void;\r\n  deleteTodo: (id: number) => void;\r\n}\r\n\r\nconst TodoList: React.FC<TodoListProps> = (props) => {\r\n  const { todos, changeTodo, deleteTodo } = props;\r\n  const [sortedItems, setSortedItems] = useState<TodoItemModel[]>([]);\r\n\r\n  useEffect(() => {\r\n    setSortedItems(\r\n      todos.items.sort((a, b) => {\r\n        // first: pinned, second: bigger id\r\n        if (a.pinned && !b.pinned) return -1;\r\n        if (!a.pinned && b.pinned) return 1;\r\n        return b.id - a.id;\r\n      }),\r\n    );\r\n  }, [todos]);\r\n\r\n  return (\r\n    <TodoListWrapper>\r\n      {sortedItems.map((todo) => (\r\n        <TodoItem\r\n          key={todo.id}\r\n          todo={todo}\r\n          changeTodo={changeTodo}\r\n          deleteTodo={deleteTodo}\r\n        />\r\n      ))}\r\n    </TodoListWrapper>\r\n  );\r\n};\r\n\r\nexport default TodoList;\r\n","import { useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport TodoApi from 'apis/TodoApi';\r\nimport { ChangeTodoItemProps } from 'models/TodoItemModel';\r\nimport TodoListModel from 'models/TodoListModel';\r\nimport TodoHeader from './TodoHeader';\r\nimport TodoList from './TodoList';\r\n\r\nconst TodoMainBackground = styled.div`\r\n  width: 600px;\r\n  min-height: 700px;\r\n  padding: 30px;\r\n  border-radius: 30px;\r\n  background: #ffffff;\r\n  box-shadow: 20px 20px 60px #d9d9d9, -20px -20px 60px #ffffff;\r\n`;\r\n\r\nconst Loading = styled.div``;\r\n\r\nconst TodoMain: React.FC = () => {\r\n  const todoApi = new TodoApi();\r\n  const [todoList, setTodoList] = useState<TodoListModel>();\r\n\r\n  useEffect(() => {\r\n    todoApi.fetchTodoList((todos) => {\r\n      setTodoList(todos);\r\n    });\r\n  }, []);\r\n\r\n  const addNewTodo = (title: string) => {\r\n    if (!todoList) return;\r\n    if (!title) return;\r\n\r\n    const newTodo = {\r\n      title,\r\n      id: todoList.counter,\r\n      done: false,\r\n      pinned: false,\r\n    };\r\n\r\n    setTodoList({\r\n      items: [...todoList.items, newTodo],\r\n      counter: todoList.counter + 1,\r\n    });\r\n  };\r\n\r\n  const deleteTodo = (id: number) => {\r\n    if (!todoList) return;\r\n\r\n    setTodoList({\r\n      items: todoList.items.filter((todo) => todo.id !== id),\r\n      counter: todoList.counter,\r\n    });\r\n  };\r\n\r\n  const changeTodo = (id: number, newTodo: ChangeTodoItemProps) => {\r\n    if (!todoList) return;\r\n\r\n    setTodoList({\r\n      items: todoList.items.map((todo) => ({\r\n        ...todo,\r\n        ...(todo.id === id && newTodo),\r\n      })),\r\n      counter: todoList.counter,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <TodoMainBackground>\r\n      {!todoList ? (\r\n        <Loading />\r\n      ) : (\r\n        <>\r\n          <TodoHeader addNewTodo={addNewTodo} />\r\n          <TodoList\r\n            todos={todoList}\r\n            changeTodo={changeTodo}\r\n            deleteTodo={deleteTodo}\r\n          />\r\n        </>\r\n      )}\r\n    </TodoMainBackground>\r\n  );\r\n};\r\n\r\nexport default TodoMain;\r\n","import PageTemplate from 'components/PageTemplate';\r\nimport styled from 'styled-components';\r\nimport TodoMain from 'components/TodoMain';\r\n\r\nconst TodoWrapper = styled.div`\r\n  min-height: inherit;\r\n  padding: 10px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  justify-content: center;\r\n`;\r\n\r\nconst TodoPage: React.FC = () => {\r\n  return (\r\n    <PageTemplate isResponsive>\r\n      <TodoWrapper>\r\n        <TodoMain />\r\n      </TodoWrapper>\r\n    </PageTemplate>\r\n  );\r\n};\r\n\r\nexport default TodoPage;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport TodoPage from 'pages/TodoPage';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" component={TodoPage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport GlobalStyle from 'styles/GlobalStyle';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <GlobalStyle />\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}